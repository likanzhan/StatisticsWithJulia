[{"url":"SidebarData/","title":"SidebarData","tags":[],"text":"Dict \"main\" \"背景知识\" collections \"Introduction\" .pages, \"第一章\" collections \"CH01\" .pages, , "},{"url":"cheatsheets/","title":"相关资源","tags":["Introduction"],"text":"语言本身 小抄本 Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group 资源汇总 JuliaHub Julia.jl 概率和统计 数据科学 Kamiński, B. (2022).  Julia for Data Analysis . Manning. ||  链接 .  github Storopoli, J., Huijzer, R.,  & Alonso, L. (2021).  Julia Data Science . ||  链接 概率知识 Billingsley, P. (2012).  Probability and Measure . Wiley. Durrett, R. (2019).  Probability: Theory and Examples  (5 ed.). Cambridge University Press. Leadbetter, R., Cambanis, S., & Pipiras, V. (2014).  A basic course in measure and probability: Theory for applications . Cambridge University Press. 频率统计 Fox, J. (2016).  Applied Regression Analysis and Generalized Linear Models  (3 ed.). SAGE. Nazarathy, Y., & Klok, H. (2021).  Statistics with Julia: Fundamentals for data science, machine learning and artificial intelligence . Springer. ||  网站 ,  github ,  Pluto 贝叶斯统计 Gelman, A., Carlin, J. B., Stern, H. S., Dunson, D. B., Vehtari, A., & Rubin, D. B. (2014).  Bayesian Data Analysis . CRC Press. ||  网站 ,  课程信息 ,  R 代码 McElreath, R. (2020).  Statistical Rethinking: A Bayesian Course with Examples in R and Stan  (2 ed.). CRC Press. ||  github ,  youtube Nicenboim, B., Schad, D., & Vasishth, S. (2021).  An Introduction to Bayesian Data Analysis for Cognitive Science . ||  在线阅读"},{"url":".","title":"Julia语言与统计","tags":["homepage"],"text":"Julia： 面向未来的技术型编程语言 \nJulia 语言的一些常见描述：\n Walks like Python, runs like C. Come for the Syntax, Stay for the Speed.  - Nature A Programming Language to Heal the Planet Together  - Alan Edlman The Technical Programming Language of the Future  - Douglas Bates 要了解更多 Julia 语言本身的一般知识， 请参看 Julia 语言  官方文档 。 \n            本站由  Julia 语言   生成."},{"url":"installation/","title":"软件安装","tags":["Introduction"],"text":"Step 1: Install Julia  1.8.2 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.8.2 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.8.2 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto , the notebook environment that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: \njulia> ]\n\n(@v 1.8 ) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: \n(@v 1.8 ) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  Featured Notebooks . These notebooks are useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fons\\Documents\\18S191_assignments\\  on Windows /Users/fons/Documents/18S191_assignments/  on MacOS /home/fons/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\n    console.log(el)\n    el.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"search/","title":"搜索结果","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"semesters/","title":"开课历史","tags":[],"text":"本课程目前的开设学期为2023年春季。"},{"url":"Ch01/02-28-Introduction/","title":"函数定义","tags":["lecture","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 1 order 7 title \"函数定义\" layout \"layout.jlhtml\" tags \"lecture\", \"CH01\" description \"\" using Markdown using InteractiveUtils m rand 10, 10 md\"\"\" control m 当前cell为文字输入 \\frac \\alpha \\beta \\times \\Gamma \"\"\" 世界 \"world\", \"地球\" println \"你好 世界\" for indx, val in enumerate 世界 println indx println val println \" \" end x^4 for x in 1 10 x^4 y^4 for x in 1 10 for y in 1 5 x^4 y^4 for x in 1 10, y in 1 5 x^4 y^4 z^3 for x in 1 10, y in 1 5, z in 1 4 X reshape 1 25, 5, x ^ 2 for x in X map x x^2, X map X do x x^2 end x x^2 f1 x x^2 f1 2 x x^2 2 function f2 x return x^2 end f2 2 X .^ 2 dot syntax "},{"url":"Ch01/03-07-Introduction/","title":"冒泡顺序","tags":["lecture","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 2 order 8 title \"冒泡顺序\" layout \"layout.jlhtml\" tags \"lecture\", \"CH01\" description \"\" using Markdown using InteractiveUtils md\"\"\" ctrl m 把当前cell变成markdown ctrl enter 新的cell （mac：commant enter） shift enter 运行当前cell shift tab： 代码缩进 contrl（command） 把当前cell中的代码注释掉 \\frac \\alpha \\beta 函数定义方式 `x f x ` \"\"\" using BenchmarkTools ╠═╡ z collect 1 10 ╠═╡ x x^2 z dot syntax doc map map z do x y x^2 y 100 end map x y x^2 y 100 , z f x y x^2 return y 100 map f, z function ff x return y x^2 y 100 end map ff, z ff 4 ff z ff. z md\"\"\" 运行速度问题 \"\"\" begin let vs begin n, a 100 000, 2.78 x, y rand n , rand n end z typeof z z1 Vector Float64 undef, length x time for i in 1 n temp a x i y i push z, temp 所有带叹号的函数都存在其某个参数会被改变的情况。 end z function axpy1 a, x, y z for i in 1 n temp a x i y i push z, temp 所有带叹号的函数都存在其某个参数会被改变的情况。 end end benchmark axpy1 a, x, y function axpy2 a, x, y z Vector Float64 undef, length x for i in 1 n temp a x i y i push z, temp 所有带叹号的函数都存在其某个参数会被改变的情况。 end end benchmark axpy2 a, x, y md\"\"\" 冒泡顺序 \"\"\" function bubbleSort a n length a for i in 1 n 1 for j in 1 n i if a j a j 1 a j , a j 1 a j 1 , a j end end end return a end data rand 1 1000, 10^4 time bubbleSort data time sort data "},{"url":"Ch01/03-14-Introduction/","title":"马科夫链","tags":["lecture","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 3 order 9 title \"马科夫链\" layout \"layout.jlhtml\" tags \"lecture\", \"CH01\" description \"\" using Markdown using InteractiveUtils using Roots find zeros using LinearAlgebra using StatsBase sample, weights md\"\"\" 多项式的根 \"\"\" f x 10x^2 3x 1 f 10 find zeros f, 10, 10 md\"\"\" 马科夫链 \"\"\" P 0.5 0.4 0.1 0.3 0.2 0.5 0.5 0.3 0.2 P1 P' typeof P InitialState 1 0 0 0 1 0 0 0 1 InitialState P^100 A rand 4, 4 reshape 1 16, 4, 4 A 2, 2 A 2, 2 P 1, P 1, 2 P^10 1, eigvecs P' eigvals P' md\"\"\" 蒙特卡洛模拟 \"\"\" md\"\"\" `x 1` 等价于 `x x 1` \"\"\" sample 1 3 P 1, ss sample 1 3, weights P 1, for in 1 10^6 length ss ss . x 10^6 for x in 1 3 rand \"x\", \"y\", \"z\" zeros Int64, 3 P begin state Ref 1 N 10^6 numInState zeros Int64, 3 for in 1 N numInState state 1 state sample 1 3, weights P state , end end P^100 1, numInState . 10^6 "},{"url":"Ch01/03-21-Introduction/","title":"做图初步","tags":["lecture","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 4 order 10 title \"做图初步\" layout \"layout.jlhtml\" tags \"lecture\", \"CH01\" description \"\" using Markdown using InteractiveUtils using CairoMakie let using Makie FNs normpath joinpath Base.find package \"Makie\" , \"..\", \"..\",\"docs\", \"examples\", \"plotting functions\" FLs \" first split fn, \".\" , \" for fn in readdir FNs print string FLs... end md\"\"\" 做图初步 \"\"\" md\"\"\" 每一个函数都有一个带叹号` `的版本 \"\"\" doc lines f x, y x^2 y^2 f0 x f x, 0 f2 x f x, 2 x1 5 0.1 5 typeof x1 x2 collect x1 typeof x2 xVals, yVals 5 0.1 5, 5 0.1 5 z0 f x, y for y in yVals for x in xVals x, y for y in 1 5, x in 6 10 z f x, y for y in yVals, x in xVals vec z z0 M z 1 10, 1 10 lines z0 1 100 f0. xVals fig Figure resolution 1000, 500 ax1 Axis fig 1, 1 , title \"直线图\", xlabel \"x值\", ylabel L\"f x, \\cdot \" ax2 Axis3 fig 1, 2 , xlabel \"x\", ylabel \"y\", zlabel L\"f x, y \" ax3 Axis fig 1, 3 1, 1 , xlabel \"x\", ylabel \"y\" lines ax1, xVals, f0. xVals , label L\"f x, 0 \" lines ax1, xVals, f2. xVals , label L\"f x, 2 \" axislegend ax1, position ct surface ax2, xVals, yVals, z hm heatmap ax3, M Colorbar fig 1, 3 2, 1 , hm tellwidth false, vertical false fig doc Colorbar md\"\"\" 多重派发 \"\"\" md\"\"\" 基于多重派发，Julia语言中有 StatsAPI 和 DataAPI 等包 \"\"\" function hailLength end function hL x T where T Number return \"春去花还在\" end function hL x Int return \"远看山有色\" end function hL x Float64 return \"近听水无声\" end hL 2.0 hL 2 hL π π \\pi tab π isa Int 2 isa Int 2.0 isa Float64 md\"\"\" 希尔顿序列 \"\"\" "},{"url":"Ch01/03-28-Introduction/","title":"希尔顿序列和动图","tags":["lecture","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 5 order 11 title \"希尔顿序列和动图\" layout \"layout.jlhtml\" tags \"lecture\", \"CH01\" description \"\" using Markdown using InteractiveUtils using PlutoUI TableOfContents title \"目录\", aside true using StatsBase using CairoMakie md\"\"\" 希尔顿序列 \"\"\" 352 318 methods 2 3 2.0 3 \"你好, \" i \" \" for i in \"亚洲\", \"欧洲\", \"美洲\" function hailLength end doc iseven md\"\"\" 判断x的真假，如果`x`为真， 返回`y`， 如果`x`为假， 返回`z` x ? y z \"\"\" 2.0 2 1 function hailLength x Int n 0 while x 1 x iseven x ? Int x 2 Int 3x 1 x % 2 0 n 1 n n 1 end return n end time lengths hailLength x for x in 2 10^7 xx x1 2 , x2 2, , x3 2, 3 x, typeof x for x in xx hist lengths, bins 1000, normalization pdf, axis limits 0, 500 , nothing , xlabel \"序列长度\", ylabel \"密度\" md\"\"\" 动图 \"\"\" md\"\"\" e^ ix \\cos x i \\sin x 当 x \\pi 时 e^ i\\pi 1 0 \"\"\" n 16 vertices 1 n complexPts exp 2π im k n for k in 1 n coords real p , imag p for p in complexPts edges Vector Vector Int typeof edges for v in vertices, u in v 1 n push edges, v, u end edges coords edges 2 fig Figure ax Axis fig 1, 1 scatter ax, coords videoname joinpath DIR , \"test.mp4\" doc record record fig, videoname do io for edge in edges lines ax, coords edge recordframe io end end fig "},{"url":"homework/2022-03-18-Draw-Data-Type/","title":"数据类型","tags":["homework","CH01"],"text":" A Pluto.jl notebook v0.19.22 frontmatter chapter 1 section 1 order 7 homework number 1 title \"数据类型\" layout \"layout.jlhtml\" tags \"homework\", \"CH01\" description \"\" using Markdown using InteractiveUtils using PlutoUI begin using GraphRecipes using Plots default size 1000, 1000 plot AbstractArray, method tree, fontsize 10, nodeshape ellipse end function TypeTree t Type, indent \" \" println string indent, t indent \" \" for st in subtypes t TypeTree st, indent end end TypeTree Number TypeTree AbstractArray begin code function mysum list out 0 for value in list out value end out end plot code, fontsize 12, shorten 0.01, axis buffer 0.15, nodeshape rect end "}]